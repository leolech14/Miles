name: 🛡️ Build & Quality Gates

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"

jobs:
  # 🚀 Layer 1: Formatting & Style (Fast feedback)
  format-and-lint:
    name: 🚀 Code Quality (Trunk)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup Trunk
        uses: trunk-io/trunk-action@v1

  # 🧪 Layer 2: Static Analysis & Tests
  test-and-analyze:
    name: 🧪 Test & Analyze
    runs-on: ubuntu-latest
    needs: format-and-lint
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run MyPy static analysis
        run: |
          echo "🔍 Running MyPy static type checking..."
          mypy --strict miles/ --ignore-missing-imports

      - name: Run Bandit security scan
        run: |
          echo "🛡️ Running Bandit security scan..."
          bandit -r miles/ -ll --format json -o bandit-report.json || true
          bandit -r miles/ -ll

      - name: Run Tests with Coverage
        run: |
          echo "🧪 Running test suite with coverage..."
          pytest --cov=miles --cov-report=xml --cov-report=html --tb=short

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  # 🔧 Layer 3: CI & Workflow Validation
  validate-workflows:
    name: 🔧 Validate Workflows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Validate YAML files
        run: |
          echo "📋 Validating YAML syntax..."
          find . -name "*.yml" -o -name "*.yaml" | grep -v test/ | xargs -I {} sh -c 'echo "Checking {}" && python -c "import yaml; yaml.safe_load(open(\"{}\"))"'

      - name: Run actionlint
        uses: raven-actions/actionlint@v2.0.0
        with:
          files: ".github/workflows/*.yml"

  # 🐳 Build & Security Scan
  build-and-scan:
    name: 🐳 Build & Scan
    runs-on: ubuntu-latest
    needs: [format-and-lint, test-and-analyze, validate-workflows]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: prep
        run: |
          REPO_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${{ github.repository_owner }}/${REPO_LOWER}:${{ github.sha }}" >> "$GITHUB_OUTPUT"
          echo "image-latest=ghcr.io/${{ github.repository_owner }}/${REPO_LOWER}:latest" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.prep.outputs.image }}
            ${{ steps.prep.outputs.image-latest }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0 # ✅ Fixed version
        with:
          image-ref: ${{ steps.prep.outputs.image }}
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  # 🚀 Build Natural Language Version
  build-natural-language:
    name: 🤖 Build Natural Language Bot
    runs-on: ubuntu-latest
    needs: [format-and-lint, test-and-analyze]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: prep
        run: |
          REPO_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${{ github.repository_owner }}/${REPO_LOWER}:natural-${{ github.sha }}" >> "$GITHUB_OUTPUT"
          echo "image-latest=ghcr.io/${{ github.repository_owner }}/${REPO_LOWER}:natural-latest" >> "$GITHUB_OUTPUT"

      - name: Build and push Natural Language Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.natural
          push: true
          tags: |
            ${{ steps.prep.outputs.image }}
            ${{ steps.prep.outputs.image-latest }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
